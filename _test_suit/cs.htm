<?xml version="1.1" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv="content-type" content="text/html;charset=utf-8"/>
<style type="text/css">
body{margin:0;padding:0;color:#159;}
#address,#legal_domicile{font-size:.9em;}
#error_load_panel{color:#f00;background-color:#ff8;padding:.5em;display:none;}

.sup,.up,.sub,.down,.ion{font-size:.8em;position:relative;}
.sup,.up{top:-.6em;/*vertical-align:super;*/}/* <sup> */
.sub,.down{top:.4em;/*vertical-align:sub;*/}/* <sub> */
.ion{top:-.6em;left:-.6em;}
</style>

<script type="text/javascript" src="JS/ce.js"></script>

<title>cs test</title></head>

<body>


<div id="error_load_panel" style="color:#f00;background-color:#ff8;padding:.5em;/* hack for NS4 */position:absolute;top:-800px;">
<hr />
<h2>Loading error</h2>
JavaScript doesn't work or XMLHttpRequest loading error?<br />
You may need to check the configuration of the browser, <a href="#" onclick="history.go(0);return false;">reload the page</a>, or start from <a href="basic/basic_test_1.htm">the basic test</a>.
<hr />
</div>

<h3>換底</h3>

number（正負整數、分數與小數）: <input id="number1" value="1000"/>
in base: <input id="base1" value="10" style="width:3em;"/>
<br />
change to base: <input id="base2" value="2" style="width:3em;"/>
<a href="#" onclick="return calc_base();">do</a>

<hr />
<h3>補數</h3>

number（整數）: <input id="number" value="1000"/>
base: <input id="base" value="2" style="width:3em;"/>
bits: <input id="bits" value="8" style="width:3em;"/>
<label for="diminished"><input type="checkbox" id="diminished"/>diminished radix complement</label>
<a href="#" onclick="return calc_complement();">←</a>
<a href="#" onclick="return calc_value();">→</a>
（正負整數）<input id="value" value="16"/><span class="down">10</span>


<hr />
<h3>Hamming Code</h3>
data(/^[01]{,20}$/): <input id="h_data" value="1101"/>
<a href="#" onclick="return Hamming.dec();" title="decode">←</a>
<a href="#" onclick="return Hamming.enc();" title="encode">→</a>
code(/^[01]{,20}$/): <input id="h_code"/>
<label for="h_reverse"><input type="checkbox" id="h_reverse"/>reverse</label>

<hr />


[cs test] log:
<div id="panel_for_log">
Page loaded. Initializing the framework. Please wait..
</div>



<script type="text/javascript">


	var SVG_object, Hamming;

	function calc_base(){
		try{
			var v=CeL.get_element('number1').value,m=v.match(/^\s*([\+\-]?\d+)\s*\/\s*(\d+)\s*$/);
			v=m?
				//	正負分數
				new CeL.quotient(m[1],m[2]):
				//	正負整數與小數
				CeL.quotient.parse_base(CeL.get_element('number1').value.toLowerCase(),CeL.get_element('base1').value);
			CeL.log('換底: '+v.toString(3) + '<span class="down">10</span> → ' + v.to_base(CeL.get_element('base2').value).replace(/_([^\(]+)/,'_<i style="text-decoration:overline">$1</i>')+'<span class="down">'+CeL.get_element('base2').value+'</span>');
		}catch(e){CeL.err(e);}
		return false;
	}


	function calc_complement() {
		var c = new CeL.complement;
		c.bits = CeL.get_element('bits').value;
		c.from(0, CeL.get_element('base').value,
				CeL.get_element('diminished').checked);
		c.set(CeL.get_element('value').value);
		CeL.get_element('number').value = c.to();
		return false;
	}

	function calc_value() {
		var c = new CeL.complement;
		c.bits = CeL.get_element('bits').value;
		c.from(CeL.get_element('number').value, CeL.get_element('base').value, CeL
				.get_element('diminished').checked);
		CeL.get_element('value').value = c.valueOf();
		return false;
	}



	function init_work() {


		CeL.use('net.web');

		CeL.use('math');

		CeL.use('math.quotient');

		CeL.use('math.Hamming');
		Hamming = CeL.math.Hamming;
		//Hamming.show(16);
		Hamming.dec = function() {
			try {
				Hamming.reverse = CeL.get_element('h_reverse').checked;
				CeL.get_element('h_data').value = Hamming.decode(CeL
						.get_element('h_code').value);
			} catch (e) {
				CeL.err(e);
			}
			return false;
		};
		Hamming.enc = function() {
			try {
				Hamming.reverse = CeL.get_element('h_reverse').checked;
				CeL.get_element('h_code').value = Hamming.encode(CeL
						.get_element('h_data').value);
			} catch (e) {
				CeL.err(e);
			}
			return false;
		};


	};


	function init_setup() {
		try {
			//	Initialize log function
			CeL.use('code.log');
			if (!CeL.is_loaded('code.log'))
				throw 1;

			CeL.Log.set_board('panel_for_log');
			CeL.debug('Log panel was settled.');

			try {
				init_work();
			} catch (e) {
				CeL.warn('Initialization failed!');
				CeL.err(e);
			}

			CeL.log.max_length = 0;
			CeL.log('Initialization complete.');

			CeL.set_debug();

		} catch (e) {
			//	show the error panel
			document.getElementById('error_load_panel').style.position = 'static';
		}
	};

</script>

<script type="text/javascript">
/*
	本 script 段落之存在是為了預防萬一。因此只能放最簡單的 script parser 亦能讀懂的 code。

	假設：通常能夠讀懂 CSS display:none; 的也能使用 DOM 來控制 error_load_panel 的顯示。
	但很遺憾的，對讀得懂 CSS 卻沒有 document.getElementById 的 Netscape Navigator 4，這不成立。
	因此不能用 display:none; 以從一開始避免顯示。
	** limit: 上一段 code 不能出錯
*/

	function load_detect() {
		if (typeof init_setup == 'function')
			init_setup();
		else {
			var mo = document && document.layers && document.layers['error_load_panel'];
			if (mo)
				mo.top = 8,
				//	指定 position 對 NS4 事實上無效用。
				mo.position = 'static';
		}
	}

	window.onload = load_detect;

</script>


</body>
</html>
